Contract {
  network: 
   Network { gateway: Gateway {
        client: [Object],
        wallet: null,
        networks: [Object],
        options: [Object],
        currentIdentity: [Object] },
     channel: Channel {
        _name: 'channel1',
        _channel_peers: [Object],
        _anchor_peers: undefined,
        _orderers: [Object],
        _kafka_brokers: [],
        _clientContext: [Object],
        _msp_manager: [Object],
        _discovery_interests: Map {},
        _discovery_results: null,
        _last_discover_timestamp: null,
        _use_discovery: false,
        _as_localhost: false,
        _endorsement_handler: [Object],
        _commit_handler: [Object],
        _last_refresh_request: [Object] },
     contracts: Map { 'cicero:' => [Circular] },
     initialized: true,
     listeners: Map {},
     discoveryEnabled: false,
     queryHandler: SingleQueryHandler { _peers: [Array], _currentPeerIndex: 0 },
     checkpointer: { factory: [Function: FILE_SYSTEM_CHECKPOINTER], options: {} },
     eventHubSelectionStrategy: RoundRobinEventHubSelectionStrategy { peers: [Array], lastPeerIdx: null },
     eventHubManager: 
      EventHubManager {
        channel: [Object],
        eventHubFactory: [Object],
        eventHubSelectionStrategy: [Object],
        newEventHubs: [] } },
  channel: 
   Channel {
     _name: 'channel1',
     _channel_peers: Map { 'blockchain-org1peer1:30110' => [Object] },
     _anchor_peers: undefined,
     _orderers: Map { 'blockchain-orderer:31010' => [Object] },
     _kafka_brokers: [],
     _clientContext: 
      Client {
        _cryptoSuite: [Object],
        _clientConfigMspid: null,
        _stateStore: [Object],
        _userContext: [Object],
        _network_config: null,
        _msps: Map {},
        _devMode: false,
        _adminSigningIdentity: null,
        _tls_mutual: {},
        _organizations: Map {},
        _certificateAuthorities: Map {},
        _channels: [Object],
        _connection_options: {} },
     _msp_manager: MSPManager { _msps: [Object] },
     _discovery_interests: Map {},
     _discovery_results: null,
     _last_discover_timestamp: null,
     _use_discovery: false,
     _as_localhost: false,
     _endorsement_handler: DiscoveryEndorsementHandler { _channel: [Circular] },
     _commit_handler: BasicCommitHandler { _channel: [Circular] },
     _last_refresh_request: { target: [Object], discover: false, asLocalhost: false } },
  chaincodeId: 'cicero',
  gateway: 
   Gateway {
     client: 
      Client {
        _cryptoSuite: [Object],
        _clientConfigMspid: null,
        _stateStore: [Object],
        _userContext: [Object],
        _network_config: null,
        _msps: Map {},
        _devMode: false,
        _adminSigningIdentity: null,
        _tls_mutual: {},
        _organizations: Map {},
        _certificateAuthorities: Map {},
        _channels: [Object],
        _connection_options: {} },
     wallet: null,
     networks: Map { 'channel1' => [Object] },
     options: 
      { queryHandlerOptions: [Object],
        eventHandlerOptions: [Object],
        discovery: [Object],
        checkpointer: [Object],
        eventHubSelectionOptions: [Object],
        identity: 'user1',
        wallet: [Object] },
     currentIdentity: 
      User {
        _name: 'user1',
        _roles: null,
        _affiliation: '',
        _enrollmentSecret: '',
        _identity: [Object],
        _signingIdentity: [Object],
        _mspId: 'Org1MSP',
        _cryptoSuite: [Object] } },
  namespace: '',
  checkpointer: { factory: [Function: FILE_SYSTEM_CHECKPOINTER], options: {} },
  discoveryInterests: [ { name: 'cicero' } ] }